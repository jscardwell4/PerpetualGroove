{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"micr",
				"microseconds2"
			],
			[
				"micor",
				"microseconds1"
			],
			[
				"Meta",
				"MetaEventData"
			],
			[
				"nano",
				"nanosecondsPerHostTick"
			],
			[
				"constraintsWithS",
				"constraintsWithSuffixTags"
			],
			[
				"constraintsWithSu",
				"constraintsWithSuffixTag"
			],
			[
				"constraintsWithPrf",
				"constraintsWithPrefixTags"
			],
			[
				"constraintsWithPr",
				"constraintsWithPrefixTag"
			],
			[
				"constrainsWithId",
				"constraintsWithIdentifierTag"
			],
			[
				"isS",
				"isSignMinus"
			],
			[
				"con",
				"ConvertToNanos"
			],
			[
				"status",
				"statusDescription"
			],
			[
				"get",
				"get3xOptions"
			],
			[
				"getOptions",
				"get2xOptions"
			],
			[
				"Op",
				"OptionSetType"
			],
			[
				"prop",
				"property"
			],
			[
				"ITachDev",
				"ITachDeviceConnection"
			],
			[
				"Conn",
				"ConnectionExists"
			],
			[
				"No",
				"NoSocketConnection"
			],
			[
				"MessageQu",
				"MessageQueueEntry"
			],
			[
				"Error",
				"ErrorType"
			],
			[
				"J",
				"JoinGroupFailed"
			],
			[
				"opt",
				"optional_binding_list"
			],
			[
				"else",
				"else_clause"
			],
			[
				"option",
				"optional_binding_head"
			],
			[
				"ident",
				"identifier_pattern"
			],
			[
				"gener",
				"generic-argument-clause"
			],
			[
				"defaul",
				"default_argument_clause"
			],
			[
				"generic",
				"generic_parameter"
			],
			[
				"pro",
				"protocol_composition"
			],
			[
				"type",
				"type_inheritance_clause"
			],
			[
				"closure_se",
				"closure_signature"
			],
			[
				"closure",
				"closure-expression"
			],
			[
				"capt",
				"capture-list"
			],
			[
				"closure_si",
				"closure_signature_identifier_list"
			],
			[
				"func",
				"function_result"
			],
			[
				"function",
				"function-result"
			],
			[
				"clos",
				"closure_signature_no_capture_list"
			],
			[
				"cap",
				"capture_list"
			],
			[
				"paren",
				"parenthesized-expression"
			],
			[
				"opti",
				"optional-chaining"
			],
			[
				"num",
				"numeric_literal"
			],
			[
				"strin",
				"string_literal"
			],
			[
				"binary",
				"binary-expression"
			],
			[
				"prefix",
				"prefix_expression"
			],
			[
				"arr",
				"array-or-dictionary"
			],
			[
				"dynami",
				"dynamicType"
			],
			[
				"e",
				"expression"
			],
			[
				"post",
				"postfix_expression"
			],
			[
				"Com",
				"CombiningDiacriticalMarks"
			],
			[
				"param",
				"parameter_list"
			],
			[
				"decla",
				"declaration_modifiers"
			],
			[
				"pos",
				"postfix_expression"
			],
			[
				"meta_",
				"meta_include_prototype"
			],
			[
				"head",
				"headerTypes"
			],
			[
				"sectio",
				"sectionItemHeights"
			],
			[
				"height",
				"heightForSection"
			],
			[
				"Bank",
				"BankCollectionDetailLayout"
			],
			[
				"BankC",
				"BankCollectionDetailLayoutDataSource"
			],
			[
				"BankCollec",
				"BankCollectionDetailLayout"
			],
			[
				"Bankode",
				"BankModelDetailDelegate"
			],
			[
				"load",
				"loadComponentDevicesSection"
			],
			[
				"Sec",
				"SectionKey"
			],
			[
				"title",
				"titleView"
			],
			[
				"BankCollectio",
				"BankCollectionDetailController"
			],
			[
				"tit",
				"titleView"
			],
			[
				"navig",
				"navigationItem"
			],
			[
				"SEctio",
				"SectionKey"
			],
			[
				"BankCo",
				"BankCollectionDetailSectionHeader"
			],
			[
				"UIColle",
				"UICollectionViewCell"
			],
			[
				"BankCollection",
				"BankCollectionDetailCell"
			],
			[
				"indexPaths",
				"indexPathsForVisibleItems"
			],
			[
				"ini",
				"initializeIVARs"
			],
			[
				"sequ",
				"sequenceArray"
			],
			[
				"check",
				"checkBoxContainer"
			],
			[
				"remove",
				"removeAllConstraints"
			],
			[
				"UIC",
				"UICollectionViewDelegate"
			],
			[
				"name",
				"nameLabel"
			],
			[
				"attr",
				"attributedTextDisplay"
			],
			[
				"valid",
				"validation"
			],
			[
				"prot",
				"protocol-composition"
			],
			[
				"met",
				"meta_scope"
			],
			[
				"update",
				"updateFromControl"
			],
			[
				"change",
				"changeHandler"
			],
			[
				"Fiel",
				"FieldTemplate"
			],
			[
				"value",
				"valueDidChange"
			],
			[
				"val",
				"valueDidChange"
			],
			[
				"Che",
				"CheckboxField"
			],
			[
				"self",
				"selfie"
			],
			[
				"Fil",
				"FieldType"
			],
			[
				"vali",
				"validation"
			],
			[
				"fiel",
				"fieldType"
			],
			[
				"did",
				"didChangeValueForField"
			],
			[
				"didC",
				"didChangeValueForField"
			],
			[
				"add",
				"addControlForField"
			],
			[
				"textFi",
				"textFieldValidation"
			],
			[
				"field",
				"fieldControl"
			],
			[
				"picker",
				"pickerControl"
			],
			[
				"cho",
				"choice"
			],
			[
				"upd",
				"updateControlForField"
			],
			[
				"Component",
				"ComponentDevice"
			],
			[
				"vl",
				"validation"
			],
			[
				"TExt",
				"TextValidation"
			],
			[
				"Pres",
				"PresetCategory"
			],
			[
				"fetch",
				"fetchedResultsForEntity"
			],
			[
				"coll",
				"collectionToRootAttributeName"
			],
			[
				"itemTo",
				"itemToRootAttributeName"
			],
			[
				"man",
				"managedObjectContext"
			],
			[
				"NSFetc",
				"NSFetchedResultsController"
			],
			[
				"enti",
				"entityDescription"
			],
			[
				"Moel",
				"ModelObject"
			],
			[
				"Create",
				"CreateTransaction"
			],
			[
				"create",
				"createItem"
			],
			[
				"NSFet",
				"NSFetchedResultsController"
			],
			[
				"Collec",
				"CollectedModel"
			],
			[
				"BankM",
				"BankModelDelegate"
			],
			[
				"BankMode",
				"BankModelCollectionDelegate"
			],
			[
				"fetc",
				"fetchedCollections"
			],
			[
				"fet",
				"fetchedItems"
			],
			[
				"mn",
				"managedObjectContext"
			],
			[
				"creat",
				"creatableItemCollection"
			],
			[
				"FOrm",
				"FormViewController"
			],
			[
				"didS",
				"didSubmit"
			],
			[
				"Form",
				"FormViewController"
			],
			[
				"manuf",
				"manufacturerCollection"
			],
			[
				"mana",
				"managedObjectContext"
			],
			[
				"collec",
				"collectionDelegates"
			],
			[
				"compo",
				"componentDeviceCollection"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "//\n//  DirectoryMonitor.swift\n//  MoonKit\n//\n//  Created by Jason Cardwell on 8/31/15.\n//  Copyright Â© 2015 Jason Cardwell. All rights reserved.\n//  source: This a port of code created by Martin Hwasser found here https://github.com/hwaxxer/MHWDirectoryWatcher\n//\n\nimport Foundation\n\npublic final class DirectoryMonitor {\n  public typealias Callback = (DirectoryMonitor) -> Void\n  \n  public let path: String\n\nprivate let queue = dispatch_queue_create\n\n  public init(path p: String) {\n      path = p\n  }\n\n  deinit {\n      stopWatching()\n  }\n\n\n}\n\n",
			"file": "Frameworks/MoonKit/Moonkit/Objects/DirectoryMonitor.swift",
			"file_size": 392,
			"file_write_time": 130855154080000000,
			"settings":
			{
				"buffer_size": 545,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n *  MHWDirectoryWatcher.h\n *  Created by Martin Hwasser on 12/19/11.\n */\n\n#import \"MHWDirectoryWatcher.h\"\n\n#define kMHWDirectoryWatcherPollInterval 0.2\n#define kMHWDirectoryWatcherPollRetryCount 5\n\ntypedef void (^MHWDirectoryWatcherCallback)(void);\n\n@interface MHWDirectoryWatcher ()\n\n@property (nonatomic) dispatch_source_t source;\n@property (nonatomic) dispatch_queue_t queue;\n@property (nonatomic) NSInteger retriesLeft;\n@property (nonatomic, getter = isDirectoryChanging) BOOL directoryChanging;\n@property (nonatomic, readwrite, copy) NSString *watchedPath;\n@property (nonatomic, copy) MHWDirectoryWatcherCallback callback;\n\n@end\n\n@implementation MHWDirectoryWatcher\n\n- (void)dealloc\n{\n    [self stopWatching];\n    _callback = nil;\n}\n\n- (id)initWithPath:(NSString *)path\n{\n    self = [super init];\n    if (self) {\n        _watchedPath = [path copy];\n        _queue = dispatch_queue_create(\"MHWDirectoryWatcherQueue\", 0);\n    }\n    return self;\n}\n\n+ (MHWDirectoryWatcher *)directoryWatcherAtPath:(NSString *)watchedPath\n                               startImmediately:(BOOL)startImmediately\n                                       callback:(void(^)())cb\n{\n    NSAssert(watchedPath != nil, @\"The directory to watch must not be nil\");\n    MHWDirectoryWatcher *directoryWatcher = [[MHWDirectoryWatcher alloc] initWithPath:watchedPath];\n    directoryWatcher.callback = cb;\n    \n    if (startImmediately) {\n        if (![directoryWatcher startWatching]) {\n            // Something went wrong, return nil\n            return nil;\n        }\n    }\n    return directoryWatcher;\n}\n\n+ (MHWDirectoryWatcher *)directoryWatcherAtPath:(NSString *)watchPath\n                                       callback:(void(^)())cb\n{\n    return [MHWDirectoryWatcher directoryWatcherAtPath:watchPath\n                                      startImmediately:YES\n                                              callback:cb];\n}\n#pragma mark -\n#pragma mark - Public methods\n\n- (BOOL)stopWatching\n{\n    if (_source != NULL) {\n        dispatch_source_cancel(_source);\n        _source = NULL;\n        return YES;\n    }\n    return NO;\n}\n\n- (BOOL)startWatching\n{\n    // Already monitoring\n    if (self.source != NULL) {\n        return NO;\n    }\n    \n    // Open an event-only file descriptor associated with the directory\n    int fd = open([self.watchedPath fileSystemRepresentation], O_EVTONLY);\n    if (fd < 0) {\n        return NO;\n    }\n    \n    void (^cleanup)() = ^{\n        close(fd);\n    };\n    \n    // Get a low priority queue\n    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0);\n    \n    // Monitor the directory for writes\n    self.source = dispatch_source_create(DISPATCH_SOURCE_TYPE_VNODE, // Monitors a file descriptor\n                                         fd, // our file descriptor\n                                         DISPATCH_VNODE_WRITE, // The file-system object data changed.\n                                         queue); // the queue to dispatch on\n    \n    if (!_source) {\n        cleanup();\n        return NO;\n    }\n    \n    __weak __typeof__(self) _weakSelf = self;\n    // Call directoryDidChange on event callback\n    dispatch_source_set_event_handler(self.source, ^{\n        [_weakSelf directoryDidChange];\n    });\n    \n    // Dispatch source destructor\n    dispatch_source_set_cancel_handler(self.source, cleanup);\n    \n    // Sources are create in suspended state, so resume it\n    dispatch_resume(self.source);\n    \n    // Everything was OK\n    return YES;\n}\n\n\n#pragma mark -\n#pragma mark - Private methods\n\n- (NSArray *)directoryMetadata\n{\n    NSFileManager *fileManager = [[NSFileManager alloc] init];\n    NSArray *contents = [fileManager contentsOfDirectoryAtPath:self.watchedPath\n                                                         error:NULL];\n    \n    NSMutableArray *directoryMetadata = [NSMutableArray array];\n    \n    for (NSString *fileName in contents) {\n        @autoreleasepool {\n            NSString *filePath = [self.watchedPath stringByAppendingPathComponent:fileName];\n            NSDictionary *fileAttributes = [[NSFileManager defaultManager] attributesOfItemAtPath:filePath\n                                                                                            error:nil];\n            NSInteger fileSize = [[fileAttributes objectForKey:NSFileSize] intValue];\n            // The fileName and fileSize will be our hash key\n            NSString *fileHash = [NSString stringWithFormat:@\"%@%ld\", fileName, (long)fileSize];\n            // Add it to our metadata list\n            [directoryMetadata addObject:fileHash];\n        }\n    }\n    return directoryMetadata;\n}\n\n- (void)checkChangesAfterDelay:(NSTimeInterval)timeInterval\n{\n    NSArray *directoryMetadata = [self directoryMetadata];\n\n    __weak __typeof__(self) _weakSelf = self;\n    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, timeInterval * NSEC_PER_SEC);\n    dispatch_after(popTime, self.queue, ^(void){\n        [_weakSelf pollDirectoryForChangesWithMetadata:directoryMetadata];\n    });\n}\n\n- (void)pollDirectoryForChangesWithMetadata:(NSArray *)oldDirectoryMetadata\n{\n    NSArray *newDirectoryMetadata = [self directoryMetadata];\n    \n    // Check if metadata has changed\n    self.directoryChanging = ![newDirectoryMetadata isEqualToArray:oldDirectoryMetadata];\n    \n    // Reset retries if it's still changing\n    self.retriesLeft = self.isDirectoryChanging ? kMHWDirectoryWatcherPollRetryCount : self.retriesLeft;\n    \n    if (self.isDirectoryChanging || 0 < self.retriesLeft--) {\n        // Either the directory is changing or\n        // we should try again as more changes may occur\n        [self checkChangesAfterDelay:kMHWDirectoryWatcherPollInterval];\n    } else {\n        // Changes appear to be completed\n        // Post a notification informing that the directory did change\n        dispatch_async(dispatch_get_main_queue(), ^{\n            self.callback();\n        });\n    }\n}\n\n- (void)directoryDidChange\n{\n    if (!self.isDirectoryChanging) {\n        // Changes just occurred\n        self.directoryChanging = YES;\n        self.retriesLeft = kMHWDirectoryWatcherPollRetryCount;\n        \n        [self checkChangesAfterDelay:kMHWDirectoryWatcherPollInterval];\n    }\n}\n\n@end",
			"settings":
			{
				"buffer_size": 6215,
				"line_ending": "Unix",
				"name": "/*"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ssObj",
				"Set Syntax: Objective-C"
			],
			[
				"bina",
				"Plist Binary: Toggle XML & Binary"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ssjs",
				"Set Syntax: JavaScript"
			],
			[
				"ssswi",
				"Set Syntax: Swift"
			],
			[
				"ssjson",
				"Set Syntax: JSON"
			],
			[
				"sssub",
				"Set Syntax: Sublime Text Syntax Def (YAML)"
			],
			[
				"ssmoo",
				"Set Syntax: MoonSwift"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ssmoon",
				"Set Syntax: MoonSwift"
			],
			[
				"swif",
				"SublimeREPL: Swift"
			],
			[
				"ssmo",
				"Set Syntax: MoonSwift"
			],
			[
				"ssMoo",
				"Set Syntax: MoonSwift"
			],
			[
				"SSswif",
				"Set Syntax: MoonSwift"
			],
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"ssshe",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ssswif",
				"Set Syntax: Swift"
			],
			[
				"sssw",
				"Set Syntax: Swift"
			],
			[
				"ssswit",
				"Set Syntax: Swift"
			],
			[
				"sssh",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ssswift",
				"Set Syntax: Swift"
			],
			[
				"ssshell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ssshel",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sstex",
				"Set Syntax: TeX"
			],
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"sstext",
				"Set Syntax: Plain Text"
			],
			[
				"sss",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"sspl",
				"Set Syntax: Plain Text"
			],
			[
				"ssYam",
				"Set Syntax: YAML"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"view",
				"View In Browser"
			],
			[
				"she",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"Snip",
				"Snippet: XML Processing Instruction"
			],
			[
				"ssxml",
				"Set Syntax: XML"
			],
			[
				"SSpy",
				"Set Syntax: Python"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"Snippet:",
				"Snippet: New Class"
			],
			[
				"Snippet: ",
				"Snippet: __magic__"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"col",
				"Color picker"
			],
			[
				"co",
				"Color picker"
			],
			[
				"color",
				"Color picker"
			],
			[
				"c",
				"Color picker"
			],
			[
				"pep",
				"PEP8: Format Code"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pret",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"oretty",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"ssgnu",
				"Set Syntax: Gnuplot"
			],
			[
				"ssre",
				"Set Syntax: Reduce"
			],
			[
				"ssr",
				"Set Syntax: Ruby"
			],
			[
				"ssred",
				"Set Syntax: Reduce"
			],
			[
				"sslis",
				"Set Syntax: Lisp"
			],
			[
				"ssl",
				"Set Syntax: Lisp"
			],
			[
				"ssli",
				"Set Syntax: Lisp"
			],
			[
				"ssb",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"sscof",
				"Set Syntax: CoffeeScript"
			],
			[
				"ssjava",
				"Set Syntax: JavaScript"
			],
			[
				"ssc",
				"Set Syntax: C"
			],
			[
				"ssapa",
				"Set Syntax: Apache Conf"
			],
			[
				"sspu",
				"Set Syntax: Puppet"
			],
			[
				"ssru",
				"Set Syntax: Ruby"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"ssphp",
				"Set Syntax: PHP"
			],
			[
				"sass",
				"SassBeautify"
			],
			[
				"sssass",
				"Set Syntax: Sass"
			],
			[
				"sssas",
				"Set Syntax: Sass"
			],
			[
				"sassb",
				"SassBeautify"
			],
			[
				"sas",
				"SassBeautify"
			],
			[
				"SAS",
				"SassBeautify"
			],
			[
				"ssjade",
				"Set Syntax: Jade"
			],
			[
				"ssjd",
				"Set Syntax: Jade"
			],
			[
				"ssj",
				"Set Syntax: Jade (Python)"
			],
			[
				"ssjad",
				"Set Syntax: Jade"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"ssja",
				"Set Syntax: Jade"
			],
			[
				"form",
				"Format: Php"
			],
			[
				"read",
				"ReadmePlease"
			],
			[
				"find",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"for",
				"Format: Php"
			],
			[
				"forma",
				"Format: Php"
			],
			[
				"ssph",
				"Set Syntax: PHP"
			],
			[
				"ssh",
				"Set Syntax: HTML"
			],
			[
				"format",
				"Format: Php"
			],
			[
				"php",
				"Format: Php"
			],
			[
				"fo",
				"Format: Javascript"
			],
			[
				"sssa",
				"Set Syntax: Sass"
			],
			[
				"ss",
				"Set Syntax: Sass"
			],
			[
				"ind",
				"Preferences: Alignment Key Bindings â User"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"ssp",
				"Set Syntax: Plain Text"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"z",
				"Set Syntax: ZenCoding"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Pa",
				"Package Control: Install Package"
			]
		],
		"width": 567.0
	},
	"console":
	{
		"height": 378.0,
		"history":
		[
			"view.set_syntax_file(\"Packages/User/MoonYAMLSwift.sublime-syntax\")",
			"pydoc.help(sublime)",
			"help(sublime)",
			"import pydoc",
			"view.run_command(\"detect_embedded_syntax\")",
			"view.run_command(\"repeat_selected\", {\"count\":2})",
			"sublime.log_commands(True)",
			"view.settings().set(\"command_mode\", True)",
			"view.settings()[\"command_mode\"] = True",
			"view.run_command(\"repeat_selected\", {\"count\":2})",
			"view.run_command(\"repeat_selected\", args={count:2})",
			"view.run_command(\"repeat_selected\", {count:2})",
			"view.run_command(\"repeat_selected\", {rpt_cnt:2})",
			"view.run_command(\"repeat_selected\", {count:2})",
			"view.run_command(\"repeat_selected\", 2)",
			"view.run_command(\"repeat_selected\", args:{count: 2})",
			"view.run_command(\"repeat_selected\", args={count: 2})",
			"view.run_command(\"repeat_selected\", \"{count: 2}\")",
			"view.run_command(\"repeat_selected\", {count: 2})",
			"view.run_command(\"repeat_selected\", 2)",
			"view.run_command(\"repeat_selected\", args={count:2})",
			"view.run_command(\"repeat_selected\", args={count=2})",
			"view.run_command(\"repeat_selected\", count=2)",
			"view.run_command(\"repeat_selected\")",
			"sublime.status_message('wtf')",
			"status_message('wtf')",
			"what",
			"print(window)",
			"help()",
			"clear()",
			"window.set_layout({'cols':[0.0, 0.5, 1.0],'rows':[0.0, 1.0],'cells':[[0,0,1,1],[1,0,2,1]]})",
			"window.run_command(set_layout,{'cols':[0.0, 0.5, 1.0],'rows':[0.0, 1.0],'cells':[[0,0,1,1],[1,0,2,1]]})",
			"sublime.run_command(set_layout,{'cols':[0.0, 0.5, 1.0],'rows':[0.0, 1.0],'cells':[[0,0,1,1],[1,0,2,1]]})",
			"view.run_command('detect_embedded_syntax')",
			"settings.has('shell')",
			"settings = sublime.load_settings('DetectEmbeddedSyntax.sublime-settings')",
			"settings.has('shell')",
			"settings = sublime.load_settings('DetectEmbeddedSyntax.sublime-settings')",
			"view.run_command('detect_embedded_syntax')",
			"sublime.find_resources('*.tmLanguage')",
			"len(sublime.find_resources('DetectEmbeddedSyntax.sublime-settings'))",
			"sublime.find_resources('DetectEmbeddedSyntax.sublime-settings')",
			"sublime.find_resources('*.tmLanguage')",
			"view.settings().get('syntax')",
			"view.run_command(\"plist_to_json\")",
			"sublime.run_command(plist_to_json_command)",
			"sublime.run_command(PlistToJsonCommand)",
			"sublime.run_command(plist_to_json)",
			"sublime.run_command(\"plist_to_json\")",
			"sublime.run_command(\"plist_to_json_command\")",
			"sublime.run_command(\"plist_to_json\")",
			"sublime.run_command(\"plist_to_json_command\")",
			"sublime.run_command(\"plist_to_json\")",
			"run_command(\"plist_to_json\")",
			"import json",
			"import plistlib",
			"random.randint(750, 20000)",
			"random.randint(750, 40000)",
			"random.randint(40000)",
			"import random",
			"window.run_command('run_shell_command')",
			"window.run_command('run_shell')",
			"clear",
			"window.run_command(\"format_json\")",
			"window.run_command('repeat_character')",
			"self.window.run_command('repeat_character')",
			"pydoc(window)",
			"pydoc window",
			"help(window)",
			"window.command('prompt_open')",
			"window",
			"help(sublime)",
			"help sublime",
			"help()",
			"help"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite.xcodeproj"
	],
	"file_history":
	[
		"/Users/Moondeer/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MetaEvent.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/DocumentSelectionController.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Note.swift",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Other/Protocols.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Track.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIFile.swift",
		"/Users/Moondeer/Projects/CoreAudioUtilityClasses/CoreAudio/PublicUtility/CAHostTimeBase.h",
		"/Users/Moondeer/Projects/CoreAudioUtilityClasses/CoreAudio/PublicUtility/CAHostTimeBase.cpp",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Extensions/String+MoonKitAdditions.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIClockSource.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIClock.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/CAHostTimeBase.swift",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Objects/Fraction.swift",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Functions/MiscellaneousFunctions.swift",
		"/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/mach/mach_time.h",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite.xcodeproj/project.pbxproj",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Mixer.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Instrument.swift",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Extensions/UIView+MoonKitAdditions.swift",
		"/Users/Moondeer/Projects/MidiSprite/Frameworks/MoonKit/Moonkit/Objects/Ratio.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIClockGenerator.h",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIClockGenerator.m",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDINode.swift",
		"/private/var/folders/kj/3y4q8wwd5ys64x69bspv8_0r0000gn/T/D7D3C914-C6E2-4D36-A397-766B20290F82/MidiSprite/MIDIPlayerScene.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Settings/SettingsManager.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/ConnectionManager.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Error.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/AudioManager.swift",
		"/private/var/folders/kj/3y4q8wwd5ys64x69bspv8_0r0000gn/T/4F69A05C-E710-4B20-9243-0CC36962E13A/MidiSprite/Instrument.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/MIDIManager.swift",
		"/Users/Moondeer/bin/SF2.py",
		"/Users/Moondeer/Projects/MidiSprite/SPYRO's Pure Oscillators.txt",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/PureOscillators.swift",
		"/Applications/Adobe Illustrator CC 2015/Presets.localized/en_US/Scripts/SaveDocsAsPDF.jsx",
		"/Users/Moondeer/Projects/Gyre/Scripts/Illustrator/export-layers.jsx",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/BankItemCreationDelegate.swift",
		"/System/Library/Frameworks/AudioUnit.framework/Versions/A/Headers/AUComponent.h",
		"/Users/Moondeer/Projects/Illustrator Scripts/MultiExporter.jsx",
		"/Users/Moondeer/Projects/Illustrator Scripts/SaveActiveArtboardForiOS.js",
		"/Users/Moondeer/Projects/Illustrator Scripts/SaveForiOS.js",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/BallScene.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Grand Piano.exs.plist",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite/Grand Piano.exs",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/ITachConnectionManager.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/MulticastConnection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/ITachDeviceConnection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/DataModel/Model/ITachDevice.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/ITachDeviceConnection.DeviceResponse.swift",
		"/Users/Moondeer/Box Sync/Projects/Peaceful Pathways/Website/Vagrantfile",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Extensions/String+MoonKitAdditions.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Other/Protocols.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Networking/Source/MessageQueueEntry.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/DiscoveryViewController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Parsing/XMLParserDelegate.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/App/AppDelegate.swift",
		"/Users/Moondeer/Projects/MidiSprite/MidiSprite.playground/Contents.swift",
		"/Users/Moondeer/Projects/Eveleth/Eveleth/Eveleth.swift",
		"/Users/Moondeer/Projects/SaveArtboardsForiOS.jsx",
		"/Users/Moondeer/Projects/Elysio/Elysio/Info.plist",
		"/Users/Moondeer/Projects/MSRemote/Remote/Remote.xcodeproj/project.pbxproj",
		"/Users/Moondeer/Downloads/error_log",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Objects/AKPickerView.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailLayout.swift",
		"/Users/Moondeer/Library/Application Support/Sublime Text 3/Packages/User/MoonYAMLSwift.sublime-syntax",
		"/Users/Moondeer/Desktop/Python/Python.sublime-syntax",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailCell/BankCollectionDetailCell.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/BankModelDetailDelegate.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailSection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailSectionHeader.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailLabelRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailListRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/BankProtocols.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/ComponentDevice+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/Image+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/IRCode+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/ISYDevice+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/ITachDevice+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/Manufacturer+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/Extensions/Preset+Bank.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ButtonGroupPresetDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ButtonPresetDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/PresetDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/RemotePresetDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/TitleAttributesDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/RemoteDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ComponentDeviceDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ImageDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/IRCodeDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ISYDeviceDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ITachDeviceDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ManufacturerDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/ActivityDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/BankModelDelegate.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/NamedItemDetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController/DetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionFilteringDetailSection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailController.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/FilteringDetailSection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailSection.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailAttributedTextRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailButtonRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailColorRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailCustomRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailImageRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailLabeledImageRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailPickerRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailSliderRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailStepperRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailSwitchRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailTextFieldRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailTextInputRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailTextViewRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailTwoToneSliderRow.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailCell.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionFilteringDetailSectionHeader.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/FilteringDetailSectionHeader.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Functions/FunctionManipulation.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/MoonKit/Moonkit/Functions/SequenceManipulation.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailSectionHeader.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailColorCell.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailCustomCell.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailImageCell.swift",
		"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailLabelCell.swift"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source/View Controllers/BankCollectionDetailRow",
			"/Users/Moondeer/Projects/MSRemote/Remote/Bank/Source",
			"/Users/Moondeer/Projects/Gyre",
			"/Users/Moondeer/Box Documents/Projects/Gyre",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass/jade",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass/coffee",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass/sass",
			"/Library/Ruby/Gems/2.0.0/gems/bootstrap-sass-3.0.2.1",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass/sass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass/sass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Website/Codekit-Compass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade,/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/sass",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade",
			"<project>",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/Peaceful Pathways - Compass/jade",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/PeacefulPathwaysFramework-Alt/jade",
			"<project>",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/PeacefulPathwaysFramework-Alt/jade",
			"<open files>",
			"/Users/Moondeer/Box Documents/Projects/Peaceful Pathways/PeacefulPathwaysFramework/less/bootstrap",
			"/Applications/MAMP/htdocs/styles/less",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lin",
			"\n    case",
			": Byte4",
			"upper:",
			": MIDINode.Placement",
			"case",
			"Optional()",
			"\\t",
			"\"",
			"advanced",
			"numerator",
			"::=",
			"var kSequenceTrackProperty_",
			"Divisible",
			"IntConvertible",
			"Int",
			" public",
			"doubleValue",
			"{",
			"Int",
			"numerator",
			"Fraction",
			"func",
			"[NSLayoutConstraint]",
			"constraints",
			"var",
			"\n\n",
			"\n",
			"init",
			"status & 0x0F",
			"data2",
			"data1",
			"Channel",
			"inEndTime",
			"inStartTime",
			"Float64",
			"inStartTime",
			"SInt64",
			"â¤ \"",
			"â¤",
			"â¤ \"",
			"guard status == noErr else { throw",
			"MIDI",
			"case k",
			"10873",
			"MoonKit",
			"MSLogError",
			"_",
			"vol",
			"fast",
			"'",
			"Â´",
			"+",
			" ",
			"tri",
			"W/h",
			"rare",
			"saw",
			"sine",
			"vib",
			"square",
			"triangl",
			"inv",
			"rebirth",
			"pink",
			"brown",
			"white",
			"(?<=Preset: )(.*)",
			"topBar",
			"piano",
			"audioButton",
			"sliders",
			"slidersButton",
			"revert",
			"revertButton",
			"Yellow Design Studio - ",
			"Eveleth-",
			"slantRegularBold",
			"Bold",
			"blackItalic",
			"boldItalic",
			"mediumItalic",
			"regularItalic",
			"lightItalic",
			"thinItalic",
			"black",
			"bold",
			"medium",
			"regular",
			"light",
			"thin",
			"hairlineFont",
			"let",
			"optional ",
			"MoonKit.framework",
			"../Debug-iphonesimulator/",
			"CocoaLumberjack.framework",
			"C24A05E91AE5C65D00C9255E",
			"y",
			"bezier2Path",
			"bezierPath",
			"controlPoint2",
			"controlPoint1",
			"CGPointMake\\(([^,]+), ([^)]+)\\)",
			"238",
			"0.",
			"7",
			"61.41",
			"115.07",
			"0.42225",
			"110 0",
			"8.73",
			"44.93",
			"26.34",
			"80",
			"1.34",
			"101.34",
			"1.34",
			"140.83",
			"104.88",
			"140.45",
			"104.12",
			"141.08",
			"105.63",
			"140.04",
			"103.43",
			"173.97",
			"69.76"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"â¤ \"\\\\(location()) ",
			"â¤ \"\\(location()) ",
			"CGPoint(x: \\1, y: \\2)",
			"CGPoint(x: \\1/2, y: \\2/2)",
			"CGPoint(x: \\1, y: \\2)",
			"\\\\s",
			"\\s",
			"",
			"(?<=\\1",
			"(?=\\1",
			"[\\\\]]",
			"[\\\\[]",
			"[\\[]",
			"\\n  ",
			"BankCollectionDetail",
			"BankCollectionDetailSection",
			"BankCollectionDetailController",
			"BankCollectionDetailSectionHeader",
			"BankCollectionDetailRow",
			"BankCollectionDetail",
			"selectAllButtonForController",
			"BankItemSearchableController",
			"BankItemCreationController",
			"BankItemImportExportController",
			"\\n",
			"",
			"\\n",
			"\"iconSets",
			"'\\1' '\\2'",
			"$'\\1' $'\\2'",
			"\\n",
			" ",
			"\\1\\t\\t\\t\\t\\t\\t\\t",
			"\\1\\t\\t\\t\\t\\t",
			"\\1\\t\\t\\2\\t\\t\\3\\n",
			"---\\n",
			"--------------------------------------------------------------------------------\\n             ",
			"--------------------------------------------------------------------------------\\n              ",
			"--------------------------------------------------------------------------------\\n",
			"\\t\\t",
			"\\t",
			"\\t\\t",
			"\\1\\t\\t\\t\\2",
			"\\1\\t\\2",
			"\\1\\t",
			"\\1 ",
			" ",
			"",
			"\\n",
			"\\\\\\\\n",
			"\\1\\\\n\\2",
			"",
			"[[",
			"\\1 = \\2 ",
			"\\1 = \\2",
			"",
			" ",
			"set grid y\\n",
			"",
			" ",
			" \\1  2, 1, 3, 1, 2, 3, 2, 1, 2, 3, 1, 2, 3, 4, 3, 1\\n",
			" ",
			"",
			"<!-- \\1 -->",
			"\\n",
			"'''",
			"= '''",
			",",
			"\\n",
			"\\t",
			"",
			"\\t",
			"GyreScene",
			"append tailScripts",
			"color: $text-muted",
			"{ trigger_error(\\1); die(); }",
			"<?php \\1",
			"<?php",
			"send_creation_notice",
			"fetch_memorials",
			"connect_to_database",
			"",
			"\\1",
			"+\\1'\\2'\\3",
			"\\1'\\2'\\3",
			"font-size-h1",
			"font-size-h2",
			"font-size-h3",
			"headings-font-family",
			"+",
			"+semi-bold",
			"+img-responsive",
			"light-grayish-brown",
			"grayish-brown",
			"\\1-light-blue-background",
			"  ",
			"include _header.jade",
			"/images/",
			"context",
			"REButtonBuilder",
			"\\1NSManagedObjectContext * context = [NSManagedObjectContext MR_contextForCurrentThread];\\n\\1\\2context\\3",
			"+",
			"peacefulpathways.co",
			"\".BASE_HOST.\"",
			"<?php echo \"<img src=\\\\\"\\1{$_SERVER['HTTP_HOST']}\\2\\\\\" />\"; ?>",
			"<?php echo \"<img src=\\\\\"\\1{$_SERVER['HTTP_HOST']}\\2\\\\\" width=\\\\\"\\3\\\\\" height=\\\\\"\\4\\\\\" />\"; ?>",
			"<?php echo \"<img src=\\\\\"\\1{$_SERVER['HTTP_HOST']}\\2\\\\\" />\"; ?>",
			"<?php echo \"<link rel='\\3' href=\\\\\"\\1{$_SERVER['HTTP_HOST']}\\2\\\\\" type='\\4' />\"; ?>",
			"<?php echo \"<link rel='\\1' href=\\\\\"\\2{$_SERVER['HTTP_HOST']}\\3\\\\\" />\"; ?>",
			"<?php echo \"<link rel='\\1' href=\\\\\"\\2{$_SERVER['HTTP_HOST']}\\3\\\\\" type='\\4' /> ?>",
			"<?php echo \"<link rel='\\1' sizes='\\2' href=\\\\\"\\3{$_SERVER['HTTP_HOST']}\\4\\\\\" type='\\5' /> ?>",
			"<?php echo \"<img src=\\\"\\1{$_SERVER['HTTP_HOST']}\\2\\\" width=\\\"\\3\\\" height=\\\"\\4\\\" alt=\\\"\\5\\\" />\"; ?>",
			"services",
			"Aftercare",
			"",
			"img/feline-grief",
			"felineGrief/\\1.png",
			"bootstrap",
			"\\1 }",
			"{ \\1",
			": \\1",
			"{ \\1",
			"\\1 }",
			"{ \\1",
			": \\1",
			"font-face(\"\\1\",font-files(\"../webfonts/\\1.eot\",\"../webfonts/\\1.woff\",\"../webfonts/\\1.ttf\"))",
			"../webfonts",
			"img"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Frameworks/MoonKit/Moonkit/Objects/DirectoryMonitor.swift",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 545,
						"regions":
						{
						},
						"selection":
						[
							[
								450,
								450
							]
						],
						"settings":
						{
							"syntax": "Packages/Swift for F*ing Sublime/Swift.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6215,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								674
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/User/Objective-C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 20.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/AAAPackageDev/Support/Convert to ....sublime-build",
	"project": "MidiSprite.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"item",
				"Remote/Bank/Source/BankItemCreationDelegate.swift"
			],
			[
				"app",
				"Remote/Bank/App/AppDelegate.swift"
			],
			[
				"discov",
				"Remote/Bank/Source/DiscoveryViewController.swift"
			],
			[
				"bank",
				"Remote/Bank/Source/Bank.swift"
			],
			[
				"messageque",
				"Remote/Networking/Source/MessageQueueEntry.swift"
			],
			[
				"string",
				"Remote/MoonKit/Moonkit/Extensions/String+MoonKitAdditions.swift"
			],
			[
				"proto",
				"Remote/MoonKit/Moonkit/Other/Protocols.swift"
			],
			[
				"conn",
				"Remote/Networking/Source/ConnectionManager.swift"
			],
			[
				"mu",
				"Remote/Networking/Source/MulticastConnection.swift"
			],
			[
				"ita",
				"Remote/Networking/Source/ITachConnectionManager.swift"
			],
			[
				"bankcollectiondetaillist",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailListRow.swift"
			],
			[
				"bankcollectiondetaillabelr",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailLabelRow.swift"
			],
			[
				"bankcollectiondetailsectionhe",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailSectionHeader.swift"
			],
			[
				"bankcollectiondetailsection",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailSection.swift"
			],
			[
				"bankcollectiondetailcontr",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailController.swift"
			],
			[
				"bankmodeldeta",
				"Remote/Bank/Source/BankModelDetailDelegate.swift"
			],
			[
				"bankcollectiondetailce",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailCell/BankCollectionDetailCell.swift"
			],
			[
				"bankcollectiondetaill",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailLayout.swift"
			],
			[
				"bankmodel",
				"Remote/Bank/Source/BankModelDetailDelegate.swift"
			],
			[
				"bankpr",
				"Remote/Bank/Source/BankProtocols.swift"
			],
			[
				"bankcollectiondetailrow",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailRow/BankCollectionDetailRow.swift"
			],
			[
				"bankcollectioncont",
				"Remote/Bank/Source/View Controllers/BankCollectionController.swift"
			],
			[
				"itachde",
				"Remote/Bank/Source/Extensions/ITachDevice+Bank.swift"
			],
			[
				"manuf",
				"Remote/Bank/Source/Extensions/Manufacturer+Bank.swift"
			],
			[
				"bankmod",
				"Remote/Bank/Source/BankModelDelegate.swift"
			],
			[
				"detail",
				"Remote/Bank/Source/View Controllers/DetailController.swift"
			],
			[
				"bankcollectiondeta",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailSectionHeader.swift"
			],
			[
				"bankcollecitoncont",
				"Remote/Bank/Source/View Controllers/BankCollectionController.swift"
			],
			[
				"bankcol",
				"Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailCell.swift"
			],
			[
				"func",
				"Remote/MoonKit/Moonkit/Functions/FunctionManipulation.swift"
			],
			[
				"seq",
				"Remote/MoonKit/Moonkit/Functions/SequenceManipulation.swift"
			],
			[
				"filter",
				"Remote/Bank/Source/View Controllers/FilteringDetailSectionHeader.swift"
			],
			[
				"detailse",
				"Remote/Bank/Source/View Controllers/DetailSectionHeader.swift"
			],
			[
				"bankcollectiond",
				"Remote/Bank/Source/View Controllers/DetailCell/BankCollectionDetailCell.swift"
			],
			[
				"bankpro",
				"Remote/Bank/Source/BankProtocols.swift"
			],
			[
				"bankcollectioncon",
				"Remote/Bank/Source/View Controllers/BankCollectionController.swift"
			],
			[
				"detailc",
				"Remote/Bank/Source/View Controllers/DetailController.swift"
			],
			[
				"bankcollectionde",
				"Remote/Bank/Source/View Controllers/BankCollectionDetailController.swift"
			],
			[
				"pse",
				"Remote/MoonKit/Moonkit/Objects/PseudoConstraint.swift"
			],
			[
				"bankcollectioncell",
				"Remote/Bank/Source/View Controllers/BankCollectionCell.swift"
			],
			[
				"imagec",
				"Remote/Bank/Resources/JSON/ImageCategory.json"
			],
			[
				"networkde",
				"Remote/Bank/Source/Extensions/NetworkDevice+Bank.swift"
			],
			[
				"akpi",
				"Remote/MoonKit/Moonkit/Objects/AKPickerView.swift"
			],
			[
				"man",
				"Remote/DataModel/Model/Manufacturer.swift"
			],
			[
				"bankroo",
				"Remote/Bank/Source/View Controllers/BankRootController.swift"
			],
			[
				"field",
				"Remote/MoonKit/Moonkit/Objects/FieldView.swift"
			],
			[
				"form",
				"Remote/MoonKit/Moonkit/Objects/FormView.swift"
			],
			[
				"named",
				"Remote/DataModel/Model/NamedModelObject.swift"
			],
			[
				"model",
				"Remote/DataModel/Model/ModelObject.swift"
			],
			[
				"manufacturer+",
				"Remote/Bank/Source/Extensions/Manufacturer+Bank.swift"
			],
			[
				"compon",
				"Remote/Bank/Source/Extensions/ComponentDevice+Bank.swift"
			],
			[
				"name",
				"Remote/DataModel/Model/NamedModelObject.swift"
			],
			[
				"preset+",
				"Remote/Bank/Source/Extensions/Preset+Bank.swift"
			],
			[
				"presetca",
				"Remote/Bank/Source/Extensions/PresetCategory+Bank.swift"
			],
			[
				"presetc",
				"Remote/DataModel/Model/PresetCategory.swift"
			],
			[
				"bankmo",
				"Remote/Bank/Source/BankModelDelegate.swift"
			],
			[
				"ircodeset",
				"Remote/Bank/Source/Extensions/IRCodeSet+Bank.swift"
			],
			[
				"bankro",
				"Remote/Bank/Source/View Controllers/BankRootController.swift"
			],
			[
				"formviewc",
				"Remote/MoonKit/Moonkit/Objects/FormViewController.swift"
			],
			[
				"modelobj",
				"Remote/DataModel/Model/ModelObject.swift"
			],
			[
				"ir",
				"Remote/DataModel/Model/IRCodeSet.swift"
			],
			[
				"ircodese",
				"Remote/DataModel/Model/IRCodeSet.swift"
			],
			[
				"preset",
				"Remote/DataModel/Model/Preset.swift"
			],
			[
				"ircode",
				"Remote/DataModel/Model/IRCode.swift"
			],
			[
				"image",
				"Remote/DataModel/Model/Image.swift"
			],
			[
				"datam",
				"Remote/DataModel/Model/DataModelProtocols.swift"
			],
			[
				"formview",
				"Remote/MoonKit/Moonkit/Objects/FormViewController.swift"
			],
			[
				"imagecategory",
				"Remote/DataModel/Model/ImageCategory.swift"
			],
			[
				"manufa",
				"Remote/DataModel/Model/Manufacturer.swift"
			],
			[
				"bankroot",
				"Remote/Bank/Source/View Controllers/BankRootCell.swift"
			],
			[
				"learner",
				"Remote/Networking/Apps/LearnerApp/LearnerAppViewController.swift"
			],
			[
				"datamodelpr",
				"Remote/DataModel/Model/DataModelProtocols.swift"
			],
			[
				"banksur",
				"Remote/Bank/Source/BankSurrogateCategory.swift"
			],
			[
				"bankcollectioncontrol",
				"Remote/Bank/Source/View Controllers/BankCollectionController.swift"
			],
			[
				"ely",
				"Remote/Elysio/Elysio.swift"
			],
			[
				"bank.",
				"Remote/Bank/Source/Bank.swift"
			],
			[
				"chameleon.f",
				"Chameleon/Chameleon/Chameleon/Chameleon.FlatColor.swift"
			],
			[
				"chameleon.q",
				"Chameleon/Chameleon/Chameleon/Chameleon.QuietLightColor.swift"
			],
			[
				"chameleon.d",
				"Chameleon/Chameleon/Chameleon/Chameleon.DarculaColor.swift"
			],
			[
				"chameleon.",
				"Chameleon/Chameleon/Chameleon/Chameleon.CSSColor.swift"
			],
			[
				"bankcollectioni",
				"Remote/Bank/Source/View Controllers/BankCollectionItemCell.swift"
			],
			[
				"bankcollectioncat",
				"Remote/Bank/Source/View Controllers/BankCollectionCategoryCell.swift"
			],
			[
				"datamodel",
				"Remote/DataModel/Model/DataModelProtocols.swift"
			],
			[
				"chameleon.c",
				"Chameleon/Chameleon/Chameleon/Chameleon.CSSColor.swift"
			],
			[
				"chame",
				"Chameleon/Chameleon/Chameleon/Chameleon.swift"
			],
			[
				"imagecate",
				"Remote/Bank/Resources/JSON/ImageCategory.json"
			],
			[
				"chamel",
				"Chameleon/Chameleon/Chameleon/Chameleon.CSSColor.swift"
			],
			[
				"uiview",
				"Remote/MoonKit/Moonkit/Extensions/UIView+MoonKitAdditions.swift"
			],
			[
				"itachcon",
				"Remote/Networking/Source/ITachConnectionManager.swift"
			],
			[
				"isyconne",
				"Remote/Networking/Source/ISYConnectionManager.swift"
			],
			[
				"networkdevicec",
				"Remote/Networking/Source/NetworkDeviceConnection.swift"
			],
			[
				"networkdevicemu",
				"Remote/Networking/Source/NetworkDeviceMulticastConnection.m"
			],
			[
				"ord",
				"Remote/MoonKit/Moonkit/Data Structures/OrderedDictionary.swift"
			],
			[
				"msdic",
				"Remote/MoonKit/MSKit/Source/Objects/MSDictionary.m"
			],
			[
				"msdi",
				"Remote/MoonKit/MSKit/Source/Objects/MSDictionary.m"
			],
			[
				"isy",
				"Remote/DataModel/Model/ISYDevice.swift"
			],
			[
				"isyd",
				"Remote/DataModel/Model/ISYDevice.swift"
			],
			[
				"diction",
				"Remote/MoonKit/Moonkit/Extensions/Dictionary+MoonKitAdditions.swift"
			],
			[
				"gcdas",
				"Remote/MoonKit/CocoaAsyncSocket/GCDAsyncSocket.m"
			],
			[
				"gcda",
				"Remote/MoonKit/CocoaAsyncSocket/GCDAsyncSocket.h"
			],
			[
				"msqueu",
				"Remote/MoonKit/MSKit/Source/Objects/MSQueue.m"
			],
			[
				"msque",
				"Remote/MoonKit/MSKit/Source/Objects/MSQueue.h"
			],
			[
				"uifon",
				"Remote/MoonKit/MSKit/Source/Categories/UIFont+MSKitAdditions.m"
			],
			[
				"jsonin",
				"Remote/MoonKit/Moonkit/Parsing/JSONIncludeDirective.swift"
			],
			[
				"jsons",
				"Remote/MoonKit/Moonkit/Parsing/JSONSerialization.swift"
			],
			[
				"title",
				"Remote/MoonKit/Moonkit Tests/TitleAttributes_Default_Text.json"
			],
			[
				"remote.json",
				"Remote/Bank/Resources/JSON/Remote.json"
			],
			[
				"imageca",
				"Remote/Bank/Resources/JSON/ImageCategory.json"
			],
			[
				"buttongroupview",
				"Remote/UI/Source/ButtonGroupView.swift"
			],
			[
				"remote.sw",
				"Remote/DataModel/Model/RemoteElement/Models/Remote.swift"
			],
			[
				"remote.swi",
				"Remote/DataModel/Model/RemoteElement/Models/Remote.swift"
			],
			[
				"titleattr",
				"Remote/MoonKit/Moonkit Tests/TitleAttributes_Default_Text.json"
			],
			[
				"imagecat",
				"Remote/Bank/Resources/JSON/ImageCategory.json"
			],
			[
				"activitc",
				"Remote/Bank/Resources/JSON/ActivityController.json"
			],
			[
				"remote",
				"Remote/Bank/Resources/JSON/Remote.json"
			],
			[
				"acti",
				"Remote/Bank/Resources/JSON/ActivityController.json"
			],
			[
				"systemcom",
				"Remote/DataModel/Model/RemoteElement/Commands/Command Subclasses/SystemCommand.swift"
			],
			[
				"command",
				"Remote/DataModel/Model/RemoteElement/Commands/Command.swift"
			],
			[
				"macrocom",
				"Remote/DataModel/Model/RemoteElement/Commands/Command Subclasses/MacroCommand.swift"
			],
			[
				"delayc",
				"Remote/DataModel/Model/RemoteElement/Commands/Command Subclasses/DelayCommand.swift"
			],
			[
				"commandoper",
				"Remote/DataModel/Model/RemoteElement/Commands/CommandOperation.swift"
			],
			[
				"switch",
				"Remote/DataModel/Model/RemoteElement/Commands/Command Subclasses/SwitchCommand.swift"
			],
			[
				"backgrou",
				"Remote/Bank/Resources/JSON/BackgroundColor_Dark_Normal.json"
			],
			[
				"",
				"Remote/Bank/Resources/JSON/ActivityController.json"
			],
			[
				"activ",
				"Remote/Bank/Resources/JSON/ActivityController.json"
			],
			[
				"manufac",
				"Remote/Bank/Resources/JSON/Manufacturer.json"
			],
			[
				"activityc",
				"Remote/Bank/Resources/JSON/ActivityController.json"
			],
			[
				"path",
				"custom/paths.zsh"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 568.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 439.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
